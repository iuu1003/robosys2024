#!/usr/bin/python3
# SPDX-FileCopyrightText: 2024 Miyuu Taniguchi
# SPDX-License-Identifier: BSD-3-Clause

import sys

# 各選手の成績を計算
def calculate_score(player):
    return (
        + player["hits"] * 2
        + player["runs_batted_in"] * 3
        + player["home_runs"] * 4
        + player["steals"] * 2
        - player["errors"] * 5
    )

# ファイルからの入力データ処理
def process_data(data):
    players = []
    for line in data:
        line = line.strip()     # 末尾の改行を削除
        if not line:
            continue
        data = line.split(",")  # 入力データを","で区切る
        if len(data) != 7:      # dataに含まれる要素が7つのときのみ反映
            print(f"error: データ数が正しくありません ({line})")
            continue
        try:
            player = {
                "name": data[0],
                "at_bats": int(data[1]),
                "hits": int(data[2]),
                "runs_batted_in": int(data[3]),
                "home_runs": int(data[4]),
                "steals": int(data[5]),
                "errors": int(data[6])
            }
            player["score"] = calculate_score(player)
            players.append(player)
        except ValueError:
            print(f"error: 数値変換が正しくありません ({line})")
    return players

# 標準入力からのデータを取得
input_data = sys.stdin.readlines()

# データを解析
players = process_data(input_data)

if players:
    players = sorted(players, key=lambda x: x["score"], reverse=True) #スコアの降順に選手を並び替え

    print("\n試合のMVP判定結果")
    rank = 1
    for player in players:
        print(f"{rank}位: {player['name']} (スコア:{player['score']})")
        rank += 1

    print(f"\n今日のMVPは{players[0]['name']}選手です")
else:
    print("\n適切な選手データが入力されていません")

